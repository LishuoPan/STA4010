\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\providecommand \oddpage@label [2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}T1}{2}{section.1}}
\newlabel{t1}{{1}{2}{T1}{section.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}T2}{2}{section.2}}
\newlabel{t2}{{2}{2}{T2}{section.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}compare \& comment}{4}{section.3}}
\newlabel{compare-comment}{{3}{4}{compare \& comment}{section.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}compare:}{4}{subsection.3.1}}
\newlabel{compare}{{3.1}{4}{compare:}{subsection.3.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.1}the time taken by SGD case is much shorter than the original SVM model. simply because we take in only one data point at a time, the time complexity is \(O(iteration)\) but for the SVM case the time complexity is \(O(n)\) so there is a time boost in SGD case.}{4}{subsubsection.3.1.1}}
\newlabel{the-time-taken-by-sgd-case-is-much-shorter-than-the-original-svm-model.-simply-because-we-take-in-only-one-data-point-at-a-time-the-time-complexity-is-oiteration-but-for-the-svm-case-the-time-complexity-is-on-so-there-is-a-time-boost-in-sgd-case.}{{3.1.1}{4}{\texorpdfstring {the time taken by SGD case is much shorter than the original SVM model. simply because we take in only one data point at a time, the time complexity is \(O(iteration)\) but for the SVM case the time complexity is \(O(n)\) so there is a time boost in SGD case.}{the time taken by SGD case is much shorter than the original SVM model. simply because we take in only one data point at a time, the time complexity is O(iteration) but for the SVM case the time complexity is O(n) so there is a time boost in SGD case.}}{subsubsection.3.1.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.2}Meanwhile, we can see that the performance of SGD is about the same or a little higher than the SVM package in sklearn under the same hyperparameter C.}{4}{subsubsection.3.1.2}}
\newlabel{meanwhile-we-can-see-that-the-performance-of-sgd-is-about-the-same-or-a-little-higher-than-the-svm-package-in-sklearn-under-the-same-hyperparameter-c.}{{3.1.2}{4}{Meanwhile, we can see that the performance of SGD is about the same or a little higher than the SVM package in sklearn under the same hyperparameter C}{subsubsection.3.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}comment:}{4}{subsection.3.2}}
\newlabel{comment}{{3.2}{4}{comment:}{subsection.3.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.1}SGD method is a good way to implement SVM, because of its time complexity and accuracy performance.}{4}{subsubsection.3.2.1}}
\newlabel{sgd-method-is-a-good-way-to-implement-svm-because-of-its-time-complexity-and-accuracy-performance.}{{3.2.1}{4}{SGD method is a good way to implement SVM, because of its time complexity and accuracy performance}{subsubsection.3.2.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.2}we can find out that in the SGD case. To simplify the problem and reduce the computational complexity, I did not use the mapping h(x). I directly use the x. Maybe a proper h(x) can boost the performance of SGD again.}{4}{subsubsection.3.2.2}}
\newlabel{we-can-find-out-that-in-the-sgd-case.-to-simplify-the-problem-and-reduce-the-computational-complexity-i-did-not-use-the-mapping-hx.-i-directly-use-the-x.-maybe-a-proper-hx-can-boost-the-performance-of-sgd-again.}{{3.2.2}{4}{we can find out that in the SGD case. To simplify the problem and reduce the computational complexity, I did not use the mapping h(x). I directly use the x. Maybe a proper h(x) can boost the performance of SGD again}{subsubsection.3.2.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.3}Higher performance maybe due to the reason that SGD is actually not finding the optimal of the original problem rather a ball around the optimal. So, this means when the case happens that the original SVM with the hyperparameter which is overfitting. The SGD is like a regulation to the optimal problem. Thus having a higher performance in the testing set.}{4}{subsubsection.3.2.3}}
\newlabel{higher-performance-maybe-due-to-the-reason-that-sgd-is-actually-not-finding-the-optimal-of-the-original-problem-rather-a-ball-around-the-optimal.-so-this-means-when-the-case-happens-that-the-original-svm-with-the-hyperparameter-which-is-overfitting.-the-sgd-is-like-a-regulation-to-the-optimal-problem.-thus-having-a-higher-performance-in-the-testing-set.}{{3.2.3}{4}{Higher performance maybe due to the reason that SGD is actually not finding the optimal of the original problem rather a ball around the optimal. So, this means when the case happens that the original SVM with the hyperparameter which is overfitting. The SGD is like a regulation to the optimal problem. Thus having a higher performance in the testing set}{subsubsection.3.2.3}{}}
